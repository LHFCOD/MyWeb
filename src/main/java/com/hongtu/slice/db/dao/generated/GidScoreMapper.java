package com.hongtu.slice.db.dao.generated;

import com.hongtu.slice.db.model.generated.GidScore;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface GidScoreMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gid_score
     *
     * @mbggenerated
     */
    @Delete({
        "delete from gid_score",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gid_score
     *
     * @mbggenerated
     */
    @Insert({
        "insert into gid_score (gid, model, ",
        "desc, target, score, ",
        "info, time, create_time, ",
        "update_time, note1, ",
        "note2)",
        "values (#{gid,jdbcType=BIGINT}, #{model,jdbcType=VARCHAR}, ",
        "#{desc,jdbcType=VARCHAR}, #{target,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}, ",
        "#{info,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{createTime,jdbcType=INTEGER}, ",
        "#{updateTime,jdbcType=INTEGER}, #{note1,jdbcType=VARCHAR}, ",
        "#{note2,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insert(GidScore record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gid_score
     *
     * @mbggenerated
     */
    @InsertProvider(type=GidScoreSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Long.class)
    int insertSelective(GidScore record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gid_score
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, gid, model, desc, target, score, info, time, create_time, update_time, note1, ",
        "note2",
        "from gid_score",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="gid", property="gid", jdbcType=JdbcType.BIGINT),
        @Result(column="model", property="model", jdbcType=JdbcType.VARCHAR),
        @Result(column="desc", property="desc", jdbcType=JdbcType.VARCHAR),
        @Result(column="target", property="target", jdbcType=JdbcType.VARCHAR),
        @Result(column="score", property="score", jdbcType=JdbcType.DOUBLE),
        @Result(column="info", property="info", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.INTEGER),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.INTEGER),
        @Result(column="note1", property="note1", jdbcType=JdbcType.VARCHAR),
        @Result(column="note2", property="note2", jdbcType=JdbcType.VARCHAR)
    })
    GidScore selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gid_score
     *
     * @mbggenerated
     */
    @UpdateProvider(type=GidScoreSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(GidScore record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table gid_score
     *
     * @mbggenerated
     */
    @Update({
        "update gid_score",
        "set gid = #{gid,jdbcType=BIGINT},",
          "model = #{model,jdbcType=VARCHAR},",
          "desc = #{desc,jdbcType=VARCHAR},",
          "target = #{target,jdbcType=VARCHAR},",
          "score = #{score,jdbcType=DOUBLE},",
          "info = #{info,jdbcType=VARCHAR},",
          "time = #{time,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=INTEGER},",
          "update_time = #{updateTime,jdbcType=INTEGER},",
          "note1 = #{note1,jdbcType=VARCHAR},",
          "note2 = #{note2,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(GidScore record);
}